/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.33.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
* HPAScalingRules configures the scaling behavior for one direction via scaling Policy Rules and a configurable metric tolerance.  Scaling Policy Rules are applied after calculating DesiredReplicas from metrics for the HPA. They can limit the scaling velocity by specifying scaling policies. They can prevent flapping by specifying the stabilization window, so that the number of replicas is not set instantly, instead, the safest value from the stabilization window is chosen.  The tolerance is applied to the metric values and prevents scaling too eagerly for small metric variations. (Note that setting a tolerance requires enabling the alpha HPAConfigurableTolerance feature gate.)
*/
export class V2HPAScalingRules {
    static getAttributeTypeMap() {
        return V2HPAScalingRules.attributeTypeMap;
    }
    constructor() {
    }
}
V2HPAScalingRules.discriminator = undefined;
V2HPAScalingRules.mapping = undefined;
V2HPAScalingRules.attributeTypeMap = [
    {
        "name": "policies",
        "baseName": "policies",
        "type": "Array<V2HPAScalingPolicy>",
        "format": ""
    },
    {
        "name": "selectPolicy",
        "baseName": "selectPolicy",
        "type": "string",
        "format": ""
    },
    {
        "name": "stabilizationWindowSeconds",
        "baseName": "stabilizationWindowSeconds",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "tolerance",
        "baseName": "tolerance",
        "type": "string",
        "format": ""
    }
];
//# sourceMappingURL=V2HPAScalingRules.js.map