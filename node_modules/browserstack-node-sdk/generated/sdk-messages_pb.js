// source: sdk-messages.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var sdk$messages$testhub_pb = require('./sdk-messages-testhub_pb.js');
goog.object.extend(proto, sdk$messages$testhub_pb);
var sdk$messages$observability_pb = require('./sdk-messages-observability_pb.js');
goog.object.extend(proto, sdk$messages$observability_pb);
var sdk$messages$accessibility_pb = require('./sdk-messages-accessibility_pb.js');
goog.object.extend(proto, sdk$messages$accessibility_pb);
var sdk$messages$percy_pb = require('./sdk-messages-percy_pb.js');
goog.object.extend(proto, sdk$messages$percy_pb);
goog.exportSymbol('proto.browserstack.sdk.v1.AutomationFrameworkInitRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.AutomationFrameworkInitResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.AutomationFrameworkStartRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.AutomationFrameworkStartResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.AutomationFrameworkStopRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.AutomationFrameworkStopResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.ConnectBinSessionRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.ConnectBinSessionResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.DriverInitRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.DriverInitResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.EnqueueTestEventRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.EnqueueTestEventResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.ExecutionContext', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.FindNearestHubRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.FindNearestHubResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.LogCreatedEventRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.LogCreatedEventResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.PlaywrightConfigRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.PlaywrightConfigResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.StartBinSessionRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.StartBinSessionResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.StopBinSessionRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.StopBinSessionResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.TestFrameworkEventRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.TestFrameworkEventResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.TestSessionEventRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.TestSessionEventResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.DriverInitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.DriverInitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.DriverInitRequest.displayName = 'proto.browserstack.sdk.v1.DriverInitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.DriverInitResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.DriverInitResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.DriverInitResponse.displayName = 'proto.browserstack.sdk.v1.DriverInitResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.AutomationFrameworkInitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.displayName = 'proto.browserstack.sdk.v1.AutomationFrameworkInitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.AutomationFrameworkInitResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.displayName = 'proto.browserstack.sdk.v1.AutomationFrameworkInitResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.AutomationFrameworkStartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.displayName = 'proto.browserstack.sdk.v1.AutomationFrameworkStartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.AutomationFrameworkStartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.AutomationFrameworkStartResponse.displayName = 'proto.browserstack.sdk.v1.AutomationFrameworkStartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.AutomationFrameworkStopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.displayName = 'proto.browserstack.sdk.v1.AutomationFrameworkStopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.AutomationFrameworkStopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.AutomationFrameworkStopResponse.displayName = 'proto.browserstack.sdk.v1.AutomationFrameworkStopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.FindNearestHubRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.FindNearestHubRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.FindNearestHubRequest.displayName = 'proto.browserstack.sdk.v1.FindNearestHubRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.FindNearestHubResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.FindNearestHubResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.FindNearestHubResponse.displayName = 'proto.browserstack.sdk.v1.FindNearestHubResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.StartBinSessionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.browserstack.sdk.v1.StartBinSessionRequest.repeatedFields_, null);
};
goog.inherits(proto.browserstack.sdk.v1.StartBinSessionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.StartBinSessionRequest.displayName = 'proto.browserstack.sdk.v1.StartBinSessionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.StartBinSessionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.StartBinSessionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.StartBinSessionResponse.displayName = 'proto.browserstack.sdk.v1.StartBinSessionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.ConnectBinSessionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.ConnectBinSessionResponse.displayName = 'proto.browserstack.sdk.v1.ConnectBinSessionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.StopBinSessionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.StopBinSessionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.StopBinSessionRequest.displayName = 'proto.browserstack.sdk.v1.StopBinSessionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.StopBinSessionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.StopBinSessionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.StopBinSessionResponse.displayName = 'proto.browserstack.sdk.v1.StopBinSessionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.PlaywrightConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.PlaywrightConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.PlaywrightConfigRequest.displayName = 'proto.browserstack.sdk.v1.PlaywrightConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.PlaywrightConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.PlaywrightConfigResponse.displayName = 'proto.browserstack.sdk.v1.PlaywrightConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.ConnectBinSessionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.ConnectBinSessionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.ConnectBinSessionRequest.displayName = 'proto.browserstack.sdk.v1.ConnectBinSessionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.TestFrameworkEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.TestFrameworkEventRequest.displayName = 'proto.browserstack.sdk.v1.TestFrameworkEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.ExecutionContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.ExecutionContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.ExecutionContext.displayName = 'proto.browserstack.sdk.v1.ExecutionContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.TestFrameworkEventResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.TestFrameworkEventResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.TestFrameworkEventResponse.displayName = 'proto.browserstack.sdk.v1.TestFrameworkEventResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.EnqueueTestEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.EnqueueTestEventRequest.displayName = 'proto.browserstack.sdk.v1.EnqueueTestEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.EnqueueTestEventResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.EnqueueTestEventResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.EnqueueTestEventResponse.displayName = 'proto.browserstack.sdk.v1.EnqueueTestEventResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.browserstack.sdk.v1.LogCreatedEventRequest.repeatedFields_, null);
};
goog.inherits(proto.browserstack.sdk.v1.LogCreatedEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.LogCreatedEventRequest.displayName = 'proto.browserstack.sdk.v1.LogCreatedEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.displayName = 'proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.LogCreatedEventResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.LogCreatedEventResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.LogCreatedEventResponse.displayName = 'proto.browserstack.sdk.v1.LogCreatedEventResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.TestSessionEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.browserstack.sdk.v1.TestSessionEventRequest.repeatedFields_, null);
};
goog.inherits(proto.browserstack.sdk.v1.TestSessionEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.TestSessionEventRequest.displayName = 'proto.browserstack.sdk.v1.TestSessionEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.displayName = 'proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.TestSessionEventResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.TestSessionEventResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.TestSessionEventResponse.displayName = 'proto.browserstack.sdk.v1.TestSessionEventResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.DriverInitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.DriverInitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.DriverInitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.DriverInitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    platformIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ref: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userInputParams: msg.getUserInputParams_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.DriverInitRequest}
 */
proto.browserstack.sdk.v1.DriverInitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.DriverInitRequest;
  return proto.browserstack.sdk.v1.DriverInitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.DriverInitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.DriverInitRequest}
 */
proto.browserstack.sdk.v1.DriverInitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatformIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUserInputParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.DriverInitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.DriverInitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.DriverInitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.DriverInitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlatformIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserInputParams_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.DriverInitRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.DriverInitRequest} returns this
 */
proto.browserstack.sdk.v1.DriverInitRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 platform_index = 2;
 * @return {number}
 */
proto.browserstack.sdk.v1.DriverInitRequest.prototype.getPlatformIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.browserstack.sdk.v1.DriverInitRequest} returns this
 */
proto.browserstack.sdk.v1.DriverInitRequest.prototype.setPlatformIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string ref = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.DriverInitRequest.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.DriverInitRequest} returns this
 */
proto.browserstack.sdk.v1.DriverInitRequest.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bytes user_input_params = 4;
 * @return {!(string|Uint8Array)}
 */
proto.browserstack.sdk.v1.DriverInitRequest.prototype.getUserInputParams = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes user_input_params = 4;
 * This is a type-conversion wrapper around `getUserInputParams()`
 * @return {string}
 */
proto.browserstack.sdk.v1.DriverInitRequest.prototype.getUserInputParams_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUserInputParams()));
};


/**
 * optional bytes user_input_params = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUserInputParams()`
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.DriverInitRequest.prototype.getUserInputParams_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUserInputParams()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.browserstack.sdk.v1.DriverInitRequest} returns this
 */
proto.browserstack.sdk.v1.DriverInitRequest.prototype.setUserInputParams = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.DriverInitResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.DriverInitResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.DriverInitResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.DriverInitResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    binSessionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    capabilities: msg.getCapabilities_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.DriverInitResponse}
 */
proto.browserstack.sdk.v1.DriverInitResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.DriverInitResponse;
  return proto.browserstack.sdk.v1.DriverInitResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.DriverInitResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.DriverInitResponse}
 */
proto.browserstack.sdk.v1.DriverInitResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCapabilities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.DriverInitResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.DriverInitResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.DriverInitResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.DriverInitResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCapabilities_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.DriverInitResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.DriverInitResponse} returns this
 */
proto.browserstack.sdk.v1.DriverInitResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string bin_session_id = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.DriverInitResponse.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.DriverInitResponse} returns this
 */
proto.browserstack.sdk.v1.DriverInitResponse.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes capabilities = 3;
 * @return {!(string|Uint8Array)}
 */
proto.browserstack.sdk.v1.DriverInitResponse.prototype.getCapabilities = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes capabilities = 3;
 * This is a type-conversion wrapper around `getCapabilities()`
 * @return {string}
 */
proto.browserstack.sdk.v1.DriverInitResponse.prototype.getCapabilities_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCapabilities()));
};


/**
 * optional bytes capabilities = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCapabilities()`
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.DriverInitResponse.prototype.getCapabilities_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCapabilities()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.browserstack.sdk.v1.DriverInitResponse} returns this
 */
proto.browserstack.sdk.v1.DriverInitResponse.prototype.setCapabilities = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkInitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    platformIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    frameworkName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    frameworkVersion: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ref: jspb.Message.getFieldWithDefault(msg, 5, ""),
    hubUrl: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkInitRequest}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.AutomationFrameworkInitRequest;
  return proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkInitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkInitRequest}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatformIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHubUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkInitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlatformIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFrameworkName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFrameworkVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHubUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkInitRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 platform_index = 2;
 * @return {number}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.getPlatformIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkInitRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.setPlatformIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string framework_name = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.getFrameworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkInitRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.setFrameworkName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string framework_version = 4;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.getFrameworkVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkInitRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.setFrameworkVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ref = 5;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkInitRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string hub_url = 6;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.getHubUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkInitRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitRequest.prototype.setHubUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkInitResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    hubUrl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkInitResponse}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.AutomationFrameworkInitResponse;
  return proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkInitResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkInitResponse}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHubUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkInitResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkInitResponse} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string hub_url = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.prototype.getHubUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkInitResponse} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.prototype.setHubUrl = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkInitResponse} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.prototype.clearHubUrl = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AutomationFrameworkInitResponse.prototype.hasHubUrl = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkStartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    platformIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    frameworkName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    frameworkVersion: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ref: jspb.Message.getFieldWithDefault(msg, 5, ""),
    frameworkSessionId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    hubUrl: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStartRequest}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.AutomationFrameworkStartRequest;
  return proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkStartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStartRequest}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatformIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkSessionId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHubUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkStartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlatformIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFrameworkName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFrameworkVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFrameworkSessionId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHubUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStartRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 platform_index = 2;
 * @return {number}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.getPlatformIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStartRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.setPlatformIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string framework_name = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.getFrameworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStartRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.setFrameworkName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string framework_version = 4;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.getFrameworkVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStartRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.setFrameworkVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ref = 5;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStartRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string framework_session_id = 6;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.getFrameworkSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStartRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.setFrameworkSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string hub_url = 7;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.getHubUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStartRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartRequest.prototype.setHubUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.AutomationFrameworkStartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkStartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStartResponse}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.AutomationFrameworkStartResponse;
  return proto.browserstack.sdk.v1.AutomationFrameworkStartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkStartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStartResponse}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.AutomationFrameworkStartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkStartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStartResponse} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStartResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkStopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    platformIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    frameworkName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    frameworkVersion: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ref: jspb.Message.getFieldWithDefault(msg, 5, ""),
    frameworkSessionId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    hubUrl: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStopRequest}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.AutomationFrameworkStopRequest;
  return proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkStopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStopRequest}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatformIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkSessionId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHubUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkStopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlatformIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFrameworkName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFrameworkVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFrameworkSessionId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHubUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStopRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 platform_index = 2;
 * @return {number}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.getPlatformIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStopRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.setPlatformIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string framework_name = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.getFrameworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStopRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.setFrameworkName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string framework_version = 4;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.getFrameworkVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStopRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.setFrameworkVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ref = 5;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStopRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string framework_session_id = 6;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.getFrameworkSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStopRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.setFrameworkSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string hub_url = 7;
 * @return {string}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.getHubUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStopRequest} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopRequest.prototype.setHubUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.AutomationFrameworkStopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkStopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStopResponse}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.AutomationFrameworkStopResponse;
  return proto.browserstack.sdk.v1.AutomationFrameworkStopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkStopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStopResponse}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.AutomationFrameworkStopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.AutomationFrameworkStopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.AutomationFrameworkStopResponse} returns this
 */
proto.browserstack.sdk.v1.AutomationFrameworkStopResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.FindNearestHubRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.FindNearestHubRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.FindNearestHubRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.FindNearestHubRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.FindNearestHubRequest}
 */
proto.browserstack.sdk.v1.FindNearestHubRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.FindNearestHubRequest;
  return proto.browserstack.sdk.v1.FindNearestHubRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.FindNearestHubRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.FindNearestHubRequest}
 */
proto.browserstack.sdk.v1.FindNearestHubRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.FindNearestHubRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.FindNearestHubRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.FindNearestHubRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.FindNearestHubRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.FindNearestHubRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.FindNearestHubRequest} returns this
 */
proto.browserstack.sdk.v1.FindNearestHubRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.FindNearestHubResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.FindNearestHubResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.FindNearestHubResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.FindNearestHubResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    latency: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.FindNearestHubResponse}
 */
proto.browserstack.sdk.v1.FindNearestHubResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.FindNearestHubResponse;
  return proto.browserstack.sdk.v1.FindNearestHubResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.FindNearestHubResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.FindNearestHubResponse}
 */
proto.browserstack.sdk.v1.FindNearestHubResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLatency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.FindNearestHubResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.FindNearestHubResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.FindNearestHubResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.FindNearestHubResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLatency();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.FindNearestHubResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.FindNearestHubResponse} returns this
 */
proto.browserstack.sdk.v1.FindNearestHubResponse.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 latency = 2;
 * @return {number}
 */
proto.browserstack.sdk.v1.FindNearestHubResponse.prototype.getLatency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.browserstack.sdk.v1.FindNearestHubResponse} returns this
 */
proto.browserstack.sdk.v1.FindNearestHubResponse.prototype.setLatency = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.repeatedFields_ = [7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.StartBinSessionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.StartBinSessionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sdkLanguage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sdkVersion: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pathProject: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pathConfig: jspb.Message.getFieldWithDefault(msg, 5, ""),
    envVarsMap: (f = msg.getEnvVarsMap()) ? f.toObject(includeInstance, undefined) : [],
    cliArgsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    frameworksList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    frameworkVersionsMap: (f = msg.getFrameworkVersionsMap()) ? f.toObject(includeInstance, undefined) : [],
    language: jspb.Message.getFieldWithDefault(msg, 10, ""),
    languageVersion: jspb.Message.getFieldWithDefault(msg, 11, ""),
    testFramework: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.StartBinSessionRequest;
  return proto.browserstack.sdk.v1.StartBinSessionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.StartBinSessionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSdkLanguage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSdkVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPathProject(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPathConfig(value);
      break;
    case 6:
      var value = msg.getEnvVarsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addCliArgs(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addFrameworks(value);
      break;
    case 9:
      var value = msg.getFrameworkVersionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageVersion(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestFramework(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.StartBinSessionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.StartBinSessionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSdkLanguage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSdkVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPathProject();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPathConfig();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEnvVarsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getCliArgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getFrameworksList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getFrameworkVersionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTestFramework();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sdk_language = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.getSdkLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.setSdkLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sdk_version = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.getSdkVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.setSdkVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string path_project = 4;
 * @return {string}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.getPathProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.setPathProject = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string path_config = 5;
 * @return {string}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.getPathConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.setPathConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * map<string, string> env_vars = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.getEnvVarsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.clearEnvVarsMap = function() {
  this.getEnvVarsMap().clear();
  return this;};


/**
 * repeated string cli_args = 7;
 * @return {!Array<string>}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.getCliArgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.setCliArgsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.addCliArgs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.clearCliArgsList = function() {
  return this.setCliArgsList([]);
};


/**
 * repeated string frameworks = 8;
 * @return {!Array<string>}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.getFrameworksList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.setFrameworksList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.addFrameworks = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.clearFrameworksList = function() {
  return this.setFrameworksList([]);
};


/**
 * map<string, string> framework_versions = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.getFrameworkVersionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 9, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.clearFrameworkVersionsMap = function() {
  this.getFrameworkVersionsMap().clear();
  return this;};


/**
 * optional string language = 10;
 * @return {string}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string language_version = 11;
 * @return {string}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.getLanguageVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.setLanguageVersion = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.clearLanguageVersion = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.hasLanguageVersion = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string test_framework = 12;
 * @return {string}
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.getTestFramework = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionRequest.prototype.setTestFramework = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.StartBinSessionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.StartBinSessionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    config: jspb.Message.getFieldWithDefault(msg, 2, ""),
    testhub: (f = msg.getTesthub()) && sdk$messages$testhub_pb.TestHub.toObject(includeInstance, f),
    observability: (f = msg.getObservability()) && sdk$messages$observability_pb.Observability.toObject(includeInstance, f),
    accessibility: (f = msg.getAccessibility()) && sdk$messages$accessibility_pb.Accessibility.toObject(includeInstance, f),
    percy: (f = msg.getPercy()) && sdk$messages$percy_pb.Percy.toObject(includeInstance, f),
    cliArgs: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.StartBinSessionResponse;
  return proto.browserstack.sdk.v1.StartBinSessionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.StartBinSessionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    case 3:
      var value = new sdk$messages$testhub_pb.TestHub;
      reader.readMessage(value,sdk$messages$testhub_pb.TestHub.deserializeBinaryFromReader);
      msg.setTesthub(value);
      break;
    case 4:
      var value = new sdk$messages$observability_pb.Observability;
      reader.readMessage(value,sdk$messages$observability_pb.Observability.deserializeBinaryFromReader);
      msg.setObservability(value);
      break;
    case 5:
      var value = new sdk$messages$accessibility_pb.Accessibility;
      reader.readMessage(value,sdk$messages$accessibility_pb.Accessibility.deserializeBinaryFromReader);
      msg.setAccessibility(value);
      break;
    case 6:
      var value = new sdk$messages$percy_pb.Percy;
      reader.readMessage(value,sdk$messages$percy_pb.Percy.deserializeBinaryFromReader);
      msg.setPercy(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCliArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.StartBinSessionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.StartBinSessionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTesthub();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sdk$messages$testhub_pb.TestHub.serializeBinaryToWriter
    );
  }
  f = message.getObservability();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      sdk$messages$observability_pb.Observability.serializeBinaryToWriter
    );
  }
  f = message.getAccessibility();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      sdk$messages$accessibility_pb.Accessibility.serializeBinaryToWriter
    );
  }
  f = message.getPercy();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      sdk$messages$percy_pb.Percy.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string config = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.setConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TestHub testhub = 3;
 * @return {?proto.browserstack.sdk.v1.TestHub}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.getTesthub = function() {
  return /** @type{?proto.browserstack.sdk.v1.TestHub} */ (
    jspb.Message.getWrapperField(this, sdk$messages$testhub_pb.TestHub, 3));
};


/**
 * @param {?proto.browserstack.sdk.v1.TestHub|undefined} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse} returns this
*/
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.setTesthub = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.clearTesthub = function() {
  return this.setTesthub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.hasTesthub = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Observability observability = 4;
 * @return {?proto.browserstack.sdk.v1.Observability}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.getObservability = function() {
  return /** @type{?proto.browserstack.sdk.v1.Observability} */ (
    jspb.Message.getWrapperField(this, sdk$messages$observability_pb.Observability, 4));
};


/**
 * @param {?proto.browserstack.sdk.v1.Observability|undefined} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse} returns this
*/
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.setObservability = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.clearObservability = function() {
  return this.setObservability(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.hasObservability = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Accessibility accessibility = 5;
 * @return {?proto.browserstack.sdk.v1.Accessibility}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.getAccessibility = function() {
  return /** @type{?proto.browserstack.sdk.v1.Accessibility} */ (
    jspb.Message.getWrapperField(this, sdk$messages$accessibility_pb.Accessibility, 5));
};


/**
 * @param {?proto.browserstack.sdk.v1.Accessibility|undefined} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse} returns this
*/
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.setAccessibility = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.clearAccessibility = function() {
  return this.setAccessibility(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.hasAccessibility = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Percy percy = 6;
 * @return {?proto.browserstack.sdk.v1.Percy}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.getPercy = function() {
  return /** @type{?proto.browserstack.sdk.v1.Percy} */ (
    jspb.Message.getWrapperField(this, sdk$messages$percy_pb.Percy, 6));
};


/**
 * @param {?proto.browserstack.sdk.v1.Percy|undefined} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse} returns this
*/
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.setPercy = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.clearPercy = function() {
  return this.setPercy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.hasPercy = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string cli_args = 7;
 * @return {string}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.getCliArgs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.setCliArgs = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.StartBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.clearCliArgs = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StartBinSessionResponse.prototype.hasCliArgs = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.ConnectBinSessionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.ConnectBinSessionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    config: jspb.Message.getFieldWithDefault(msg, 2, ""),
    testhub: (f = msg.getTesthub()) && sdk$messages$testhub_pb.TestHub.toObject(includeInstance, f),
    observability: (f = msg.getObservability()) && sdk$messages$observability_pb.Observability.toObject(includeInstance, f),
    accessibility: (f = msg.getAccessibility()) && sdk$messages$accessibility_pb.Accessibility.toObject(includeInstance, f),
    percy: (f = msg.getPercy()) && sdk$messages$percy_pb.Percy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionResponse}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.ConnectBinSessionResponse;
  return proto.browserstack.sdk.v1.ConnectBinSessionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.ConnectBinSessionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionResponse}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    case 3:
      var value = new sdk$messages$testhub_pb.TestHub;
      reader.readMessage(value,sdk$messages$testhub_pb.TestHub.deserializeBinaryFromReader);
      msg.setTesthub(value);
      break;
    case 4:
      var value = new sdk$messages$observability_pb.Observability;
      reader.readMessage(value,sdk$messages$observability_pb.Observability.deserializeBinaryFromReader);
      msg.setObservability(value);
      break;
    case 5:
      var value = new sdk$messages$accessibility_pb.Accessibility;
      reader.readMessage(value,sdk$messages$accessibility_pb.Accessibility.deserializeBinaryFromReader);
      msg.setAccessibility(value);
      break;
    case 6:
      var value = new sdk$messages$percy_pb.Percy;
      reader.readMessage(value,sdk$messages$percy_pb.Percy.deserializeBinaryFromReader);
      msg.setPercy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.ConnectBinSessionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.ConnectBinSessionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTesthub();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sdk$messages$testhub_pb.TestHub.serializeBinaryToWriter
    );
  }
  f = message.getObservability();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      sdk$messages$observability_pb.Observability.serializeBinaryToWriter
    );
  }
  f = message.getAccessibility();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      sdk$messages$accessibility_pb.Accessibility.serializeBinaryToWriter
    );
  }
  f = message.getPercy();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      sdk$messages$percy_pb.Percy.serializeBinaryToWriter
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string config = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.setConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TestHub testhub = 3;
 * @return {?proto.browserstack.sdk.v1.TestHub}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.getTesthub = function() {
  return /** @type{?proto.browserstack.sdk.v1.TestHub} */ (
    jspb.Message.getWrapperField(this, sdk$messages$testhub_pb.TestHub, 3));
};


/**
 * @param {?proto.browserstack.sdk.v1.TestHub|undefined} value
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionResponse} returns this
*/
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.setTesthub = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.clearTesthub = function() {
  return this.setTesthub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.hasTesthub = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Observability observability = 4;
 * @return {?proto.browserstack.sdk.v1.Observability}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.getObservability = function() {
  return /** @type{?proto.browserstack.sdk.v1.Observability} */ (
    jspb.Message.getWrapperField(this, sdk$messages$observability_pb.Observability, 4));
};


/**
 * @param {?proto.browserstack.sdk.v1.Observability|undefined} value
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionResponse} returns this
*/
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.setObservability = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.clearObservability = function() {
  return this.setObservability(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.hasObservability = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Accessibility accessibility = 5;
 * @return {?proto.browserstack.sdk.v1.Accessibility}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.getAccessibility = function() {
  return /** @type{?proto.browserstack.sdk.v1.Accessibility} */ (
    jspb.Message.getWrapperField(this, sdk$messages$accessibility_pb.Accessibility, 5));
};


/**
 * @param {?proto.browserstack.sdk.v1.Accessibility|undefined} value
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionResponse} returns this
*/
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.setAccessibility = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.clearAccessibility = function() {
  return this.setAccessibility(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.hasAccessibility = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Percy percy = 6;
 * @return {?proto.browserstack.sdk.v1.Percy}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.getPercy = function() {
  return /** @type{?proto.browserstack.sdk.v1.Percy} */ (
    jspb.Message.getWrapperField(this, sdk$messages$percy_pb.Percy, 6));
};


/**
 * @param {?proto.browserstack.sdk.v1.Percy|undefined} value
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionResponse} returns this
*/
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.setPercy = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.clearPercy = function() {
  return this.setPercy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.ConnectBinSessionResponse.prototype.hasPercy = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.StopBinSessionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.StopBinSessionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    exitCode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    exitSignal: jspb.Message.getFieldWithDefault(msg, 3, ""),
    exitReason: jspb.Message.getFieldWithDefault(msg, 4, ""),
    customMetadata: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.StopBinSessionRequest}
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.StopBinSessionRequest;
  return proto.browserstack.sdk.v1.StopBinSessionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.StopBinSessionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.StopBinSessionRequest}
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExitCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExitSignal(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExitReason(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.StopBinSessionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.StopBinSessionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StopBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 exit_code = 2;
 * @return {number}
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.getExitCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.browserstack.sdk.v1.StopBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.setExitCode = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.StopBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.clearExitCode = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.hasExitCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string exit_signal = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.getExitSignal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StopBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.setExitSignal = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.StopBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.clearExitSignal = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.hasExitSignal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string exit_reason = 4;
 * @return {string}
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.getExitReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StopBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.setExitReason = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.StopBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.clearExitReason = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.hasExitReason = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string custom_metadata = 5;
 * @return {string}
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.getCustomMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StopBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.setCustomMetadata = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.StopBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.clearCustomMetadata = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StopBinSessionRequest.prototype.hasCustomMetadata = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.StopBinSessionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.StopBinSessionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    error: jspb.Message.getFieldWithDefault(msg, 2, ""),
    automateBuildlink: jspb.Message.getFieldWithDefault(msg, 3, ""),
    hashedId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.StopBinSessionResponse}
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.StopBinSessionResponse;
  return proto.browserstack.sdk.v1.StopBinSessionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.StopBinSessionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.StopBinSessionResponse}
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAutomateBuildlink(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHashedId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.StopBinSessionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.StopBinSessionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.StopBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StopBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.setError = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.StopBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.clearError = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string automate_buildlink = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.getAutomateBuildlink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StopBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.setAutomateBuildlink = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.StopBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.clearAutomateBuildlink = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.hasAutomateBuildlink = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string hashed_id = 4;
 * @return {string}
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.getHashedId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.StopBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.setHashedId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.StopBinSessionResponse} returns this
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.clearHashedId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.StopBinSessionResponse.prototype.hasHashedId = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.PlaywrightConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.PlaywrightConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.PlaywrightConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.PlaywrightConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    config: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ref: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.PlaywrightConfigRequest}
 */
proto.browserstack.sdk.v1.PlaywrightConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.PlaywrightConfigRequest;
  return proto.browserstack.sdk.v1.PlaywrightConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.PlaywrightConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.PlaywrightConfigRequest}
 */
proto.browserstack.sdk.v1.PlaywrightConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.PlaywrightConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.PlaywrightConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.PlaywrightConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.PlaywrightConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.PlaywrightConfigRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.PlaywrightConfigRequest} returns this
 */
proto.browserstack.sdk.v1.PlaywrightConfigRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string config = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.PlaywrightConfigRequest.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.PlaywrightConfigRequest} returns this
 */
proto.browserstack.sdk.v1.PlaywrightConfigRequest.prototype.setConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ref = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.PlaywrightConfigRequest.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.PlaywrightConfigRequest} returns this
 */
proto.browserstack.sdk.v1.PlaywrightConfigRequest.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.PlaywrightConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.PlaywrightConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    config: jspb.Message.getFieldWithDefault(msg, 2, ""),
    error: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.PlaywrightConfigResponse}
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.PlaywrightConfigResponse;
  return proto.browserstack.sdk.v1.PlaywrightConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.PlaywrightConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.PlaywrightConfigResponse}
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.PlaywrightConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.PlaywrightConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.PlaywrightConfigResponse} returns this
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string config = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.PlaywrightConfigResponse} returns this
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.prototype.setConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string error = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.PlaywrightConfigResponse} returns this
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.prototype.setError = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.PlaywrightConfigResponse} returns this
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.prototype.clearError = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.PlaywrightConfigResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.ConnectBinSessionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.ConnectBinSessionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.ConnectBinSessionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.ConnectBinSessionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    platformIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionRequest}
 */
proto.browserstack.sdk.v1.ConnectBinSessionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.ConnectBinSessionRequest;
  return proto.browserstack.sdk.v1.ConnectBinSessionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.ConnectBinSessionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionRequest}
 */
proto.browserstack.sdk.v1.ConnectBinSessionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatformIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.ConnectBinSessionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.ConnectBinSessionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.ConnectBinSessionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.ConnectBinSessionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.ConnectBinSessionRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.ConnectBinSessionRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 platform_index = 2;
 * @return {number}
 */
proto.browserstack.sdk.v1.ConnectBinSessionRequest.prototype.getPlatformIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.ConnectBinSessionRequest.prototype.setPlatformIndex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.ConnectBinSessionRequest} returns this
 */
proto.browserstack.sdk.v1.ConnectBinSessionRequest.prototype.clearPlatformIndex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.ConnectBinSessionRequest.prototype.hasPlatformIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.TestFrameworkEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    platformIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    testFrameworkName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    testFrameworkVersion: jspb.Message.getFieldWithDefault(msg, 4, ""),
    uuid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    eventJson: msg.getEventJson_asB64(),
    testFrameworkState: jspb.Message.getFieldWithDefault(msg, 7, ""),
    testHookState: jspb.Message.getFieldWithDefault(msg, 8, ""),
    startedAt: jspb.Message.getFieldWithDefault(msg, 9, ""),
    endedAt: jspb.Message.getFieldWithDefault(msg, 10, ""),
    executionContext: (f = msg.getExecutionContext()) && proto.browserstack.sdk.v1.ExecutionContext.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.TestFrameworkEventRequest;
  return proto.browserstack.sdk.v1.TestFrameworkEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatformIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestFrameworkName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestFrameworkVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEventJson(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestFrameworkState(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestHookState(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartedAt(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndedAt(value);
      break;
    case 11:
      var value = new proto.browserstack.sdk.v1.ExecutionContext;
      reader.readMessage(value,proto.browserstack.sdk.v1.ExecutionContext.deserializeBinaryFromReader);
      msg.setExecutionContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.TestFrameworkEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlatformIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTestFrameworkName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTestFrameworkVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEventJson_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getTestFrameworkState();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTestHookState();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStartedAt();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getExecutionContext();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.browserstack.sdk.v1.ExecutionContext.serializeBinaryToWriter
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 platform_index = 2;
 * @return {number}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.getPlatformIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.setPlatformIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string test_framework_name = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.getTestFrameworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.setTestFrameworkName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string test_framework_version = 4;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.getTestFrameworkVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.setTestFrameworkVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string uuid = 5;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bytes event_json = 6;
 * @return {!(string|Uint8Array)}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.getEventJson = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes event_json = 6;
 * This is a type-conversion wrapper around `getEventJson()`
 * @return {string}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.getEventJson_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEventJson()));
};


/**
 * optional bytes event_json = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEventJson()`
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.getEventJson_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEventJson()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.setEventJson = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional string test_framework_state = 7;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.getTestFrameworkState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.setTestFrameworkState = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string test_hook_state = 8;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.getTestHookState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.setTestHookState = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string started_at = 9;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.getStartedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.setStartedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string ended_at = 10;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.getEndedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.setEndedAt = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.clearEndedAt = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.hasEndedAt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ExecutionContext execution_context = 11;
 * @return {?proto.browserstack.sdk.v1.ExecutionContext}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.getExecutionContext = function() {
  return /** @type{?proto.browserstack.sdk.v1.ExecutionContext} */ (
    jspb.Message.getWrapperField(this, proto.browserstack.sdk.v1.ExecutionContext, 11));
};


/**
 * @param {?proto.browserstack.sdk.v1.ExecutionContext|undefined} value
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} returns this
*/
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.setExecutionContext = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.clearExecutionContext = function() {
  return this.setExecutionContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.TestFrameworkEventRequest.prototype.hasExecutionContext = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.ExecutionContext.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.ExecutionContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.ExecutionContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.ExecutionContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    threadId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    processId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.ExecutionContext}
 */
proto.browserstack.sdk.v1.ExecutionContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.ExecutionContext;
  return proto.browserstack.sdk.v1.ExecutionContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.ExecutionContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.ExecutionContext}
 */
proto.browserstack.sdk.v1.ExecutionContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setThreadId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.ExecutionContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.ExecutionContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.ExecutionContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.ExecutionContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThreadId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string thread_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.ExecutionContext.prototype.getThreadId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.ExecutionContext} returns this
 */
proto.browserstack.sdk.v1.ExecutionContext.prototype.setThreadId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string process_id = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.ExecutionContext.prototype.getProcessId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.ExecutionContext} returns this
 */
proto.browserstack.sdk.v1.ExecutionContext.prototype.setProcessId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.ExecutionContext} returns this
 */
proto.browserstack.sdk.v1.ExecutionContext.prototype.clearProcessId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.ExecutionContext.prototype.hasProcessId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string hash = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.ExecutionContext.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.ExecutionContext} returns this
 */
proto.browserstack.sdk.v1.ExecutionContext.prototype.setHash = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.ExecutionContext} returns this
 */
proto.browserstack.sdk.v1.ExecutionContext.prototype.clearHash = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.ExecutionContext.prototype.hasHash = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.TestFrameworkEventResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.TestFrameworkEventResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.TestFrameworkEventResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.TestFrameworkEventResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventResponse}
 */
proto.browserstack.sdk.v1.TestFrameworkEventResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.TestFrameworkEventResponse;
  return proto.browserstack.sdk.v1.TestFrameworkEventResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.TestFrameworkEventResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventResponse}
 */
proto.browserstack.sdk.v1.TestFrameworkEventResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.TestFrameworkEventResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.TestFrameworkEventResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.TestFrameworkEventResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.TestFrameworkEventResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.TestFrameworkEventResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventResponse} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestFrameworkEventResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventResponse} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventResponse.prototype.setError = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.TestFrameworkEventResponse} returns this
 */
proto.browserstack.sdk.v1.TestFrameworkEventResponse.prototype.clearError = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.TestFrameworkEventResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.EnqueueTestEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.EnqueueTestEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    eventUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eventDataJson: msg.getEventDataJson_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.EnqueueTestEventRequest}
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.EnqueueTestEventRequest;
  return proto.browserstack.sdk.v1.EnqueueTestEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.EnqueueTestEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.EnqueueTestEventRequest}
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventUrl(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEventDataJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.EnqueueTestEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.EnqueueTestEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEventUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEventDataJson_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.EnqueueTestEventRequest} returns this
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string event_url = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.prototype.getEventUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.EnqueueTestEventRequest} returns this
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.prototype.setEventUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes event_data_json = 3;
 * @return {!(string|Uint8Array)}
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.prototype.getEventDataJson = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes event_data_json = 3;
 * This is a type-conversion wrapper around `getEventDataJson()`
 * @return {string}
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.prototype.getEventDataJson_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEventDataJson()));
};


/**
 * optional bytes event_data_json = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEventDataJson()`
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.prototype.getEventDataJson_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEventDataJson()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.browserstack.sdk.v1.EnqueueTestEventRequest} returns this
 */
proto.browserstack.sdk.v1.EnqueueTestEventRequest.prototype.setEventDataJson = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.EnqueueTestEventResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.EnqueueTestEventResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.EnqueueTestEventResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.EnqueueTestEventResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.EnqueueTestEventResponse}
 */
proto.browserstack.sdk.v1.EnqueueTestEventResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.EnqueueTestEventResponse;
  return proto.browserstack.sdk.v1.EnqueueTestEventResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.EnqueueTestEventResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.EnqueueTestEventResponse}
 */
proto.browserstack.sdk.v1.EnqueueTestEventResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.EnqueueTestEventResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.EnqueueTestEventResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.EnqueueTestEventResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.EnqueueTestEventResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.EnqueueTestEventResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.EnqueueTestEventResponse} returns this
 */
proto.browserstack.sdk.v1.EnqueueTestEventResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.EnqueueTestEventResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.EnqueueTestEventResponse} returns this
 */
proto.browserstack.sdk.v1.EnqueueTestEventResponse.prototype.setError = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.EnqueueTestEventResponse} returns this
 */
proto.browserstack.sdk.v1.EnqueueTestEventResponse.prototype.clearError = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.EnqueueTestEventResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.LogCreatedEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.LogCreatedEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    platformIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    logsList: jspb.Message.toObjectList(msg.getLogsList(),
    proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.toObject, includeInstance),
    executionContext: (f = msg.getExecutionContext()) && proto.browserstack.sdk.v1.ExecutionContext.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.LogCreatedEventRequest;
  return proto.browserstack.sdk.v1.LogCreatedEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.LogCreatedEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatformIndex(value);
      break;
    case 3:
      var value = new proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry;
      reader.readMessage(value,proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.deserializeBinaryFromReader);
      msg.addLogs(value);
      break;
    case 4:
      var value = new proto.browserstack.sdk.v1.ExecutionContext;
      reader.readMessage(value,proto.browserstack.sdk.v1.ExecutionContext.deserializeBinaryFromReader);
      msg.setExecutionContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.LogCreatedEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.LogCreatedEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlatformIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getLogsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.serializeBinaryToWriter
    );
  }
  f = message.getExecutionContext();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.browserstack.sdk.v1.ExecutionContext.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    testFrameworkName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    testFrameworkVersion: jspb.Message.getFieldWithDefault(msg, 2, ""),
    testFrameworkState: jspb.Message.getFieldWithDefault(msg, 3, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, ""),
    uuid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 6, ""),
    message: msg.getMessage_asB64(),
    level: jspb.Message.getFieldWithDefault(msg, 8, ""),
    fileName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    fileSize: jspb.Message.getFieldWithDefault(msg, 10, 0),
    filePath: jspb.Message.getFieldWithDefault(msg, 11, ""),
    attachmentType: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry;
  return proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestFrameworkName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestFrameworkVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestFrameworkState(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMessage(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFileSize(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilePath(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttachmentType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTestFrameworkName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTestFrameworkVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTestFrameworkState();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMessage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string test_framework_name = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getTestFrameworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.setTestFrameworkName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string test_framework_version = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getTestFrameworkVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.setTestFrameworkVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string test_framework_state = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getTestFrameworkState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.setTestFrameworkState = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string timestamp = 4;
 * @return {string}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string uuid = 5;
 * @return {string}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string kind = 6;
 * @return {string}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bytes message = 7;
 * @return {!(string|Uint8Array)}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getMessage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes message = 7;
 * This is a type-conversion wrapper around `getMessage()`
 * @return {string}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getMessage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMessage()));
};


/**
 * optional bytes message = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessage()`
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getMessage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMessage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.setMessage = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional string level = 8;
 * @return {string}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.setLevel = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.clearLevel = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string file_name = 9;
 * @return {string}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.setFileName = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.clearFileName = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.hasFileName = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 file_size = 10;
 * @return {number}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getFileSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.setFileSize = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.clearFileSize = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.hasFileSize = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string file_path = 11;
 * @return {string}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getFilePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.setFilePath = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.clearFilePath = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.hasFilePath = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string attachment_type = 12;
 * @return {string}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.getAttachmentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.setAttachmentType = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.clearAttachmentType = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry.prototype.hasAttachmentType = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 platform_index = 2;
 * @return {number}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.getPlatformIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.setPlatformIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated LogEntry logs = 3;
 * @return {!Array<!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry>}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.getLogsList = function() {
  return /** @type{!Array<!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry, 3));
};


/**
 * @param {!Array<!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry>} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest} returns this
*/
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.setLogsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.addLogs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.browserstack.sdk.v1.LogCreatedEventRequest.LogEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.clearLogsList = function() {
  return this.setLogsList([]);
};


/**
 * optional ExecutionContext execution_context = 4;
 * @return {?proto.browserstack.sdk.v1.ExecutionContext}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.getExecutionContext = function() {
  return /** @type{?proto.browserstack.sdk.v1.ExecutionContext} */ (
    jspb.Message.getWrapperField(this, proto.browserstack.sdk.v1.ExecutionContext, 4));
};


/**
 * @param {?proto.browserstack.sdk.v1.ExecutionContext|undefined} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest} returns this
*/
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.setExecutionContext = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventRequest} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.clearExecutionContext = function() {
  return this.setExecutionContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.LogCreatedEventRequest.prototype.hasExecutionContext = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.LogCreatedEventResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.LogCreatedEventResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.LogCreatedEventResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.LogCreatedEventResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventResponse}
 */
proto.browserstack.sdk.v1.LogCreatedEventResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.LogCreatedEventResponse;
  return proto.browserstack.sdk.v1.LogCreatedEventResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.LogCreatedEventResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventResponse}
 */
proto.browserstack.sdk.v1.LogCreatedEventResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.LogCreatedEventResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.LogCreatedEventResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.LogCreatedEventResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.LogCreatedEventResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.LogCreatedEventResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventResponse} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.LogCreatedEventResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventResponse} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventResponse.prototype.setError = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.LogCreatedEventResponse} returns this
 */
proto.browserstack.sdk.v1.LogCreatedEventResponse.prototype.clearError = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.LogCreatedEventResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.TestSessionEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.TestSessionEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    platformIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    testFrameworkName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    testFrameworkVersion: jspb.Message.getFieldWithDefault(msg, 4, ""),
    testFrameworkState: jspb.Message.getFieldWithDefault(msg, 5, ""),
    testHookState: jspb.Message.getFieldWithDefault(msg, 6, ""),
    testUuid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    automationSessionsList: jspb.Message.toObjectList(msg.getAutomationSessionsList(),
    proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.toObject, includeInstance),
    executionContext: (f = msg.getExecutionContext()) && proto.browserstack.sdk.v1.ExecutionContext.toObject(includeInstance, f),
    capabilities: msg.getCapabilities_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.TestSessionEventRequest;
  return proto.browserstack.sdk.v1.TestSessionEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.TestSessionEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatformIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestFrameworkName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestFrameworkVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestFrameworkState(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestHookState(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestUuid(value);
      break;
    case 8:
      var value = new proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession;
      reader.readMessage(value,proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.deserializeBinaryFromReader);
      msg.addAutomationSessions(value);
      break;
    case 9:
      var value = new proto.browserstack.sdk.v1.ExecutionContext;
      reader.readMessage(value,proto.browserstack.sdk.v1.ExecutionContext.deserializeBinaryFromReader);
      msg.setExecutionContext(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCapabilities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.TestSessionEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.TestSessionEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlatformIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTestFrameworkName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTestFrameworkVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTestFrameworkState();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTestHookState();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTestUuid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAutomationSessionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.serializeBinaryToWriter
    );
  }
  f = message.getExecutionContext();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.browserstack.sdk.v1.ExecutionContext.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBytes(
      10,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    product: jspb.Message.getFieldWithDefault(msg, 2, ""),
    frameworkName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    frameworkVersion: jspb.Message.getFieldWithDefault(msg, 4, ""),
    frameworkSessionId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ref: jspb.Message.getFieldWithDefault(msg, 6, ""),
    hubUrl: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession;
  return proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProduct(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkSessionId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHubUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrameworkName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFrameworkVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFrameworkSessionId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string product = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.getProduct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.setProduct = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.clearProduct = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string framework_name = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.getFrameworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.setFrameworkName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string framework_version = 4;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.getFrameworkVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.setFrameworkVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string framework_session_id = 5;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.getFrameworkSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.setFrameworkSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string ref = 6;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.setRef = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.clearRef = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.hasRef = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string hub_url = 7;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.getHubUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.setHubUrl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.clearHubUrl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession.prototype.hasHubUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 platform_index = 2;
 * @return {number}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.getPlatformIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.setPlatformIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string test_framework_name = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.getTestFrameworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.setTestFrameworkName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string test_framework_version = 4;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.getTestFrameworkVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.setTestFrameworkVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string test_framework_state = 5;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.getTestFrameworkState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.setTestFrameworkState = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string test_hook_state = 6;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.getTestHookState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.setTestHookState = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string test_uuid = 7;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.getTestUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.setTestUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated AutomationSession automation_sessions = 8;
 * @return {!Array<!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession>}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.getAutomationSessionsList = function() {
  return /** @type{!Array<!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession, 8));
};


/**
 * @param {!Array<!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession>} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest} returns this
*/
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.setAutomationSessionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession=} opt_value
 * @param {number=} opt_index
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.addAutomationSessions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.browserstack.sdk.v1.TestSessionEventRequest.AutomationSession, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.clearAutomationSessionsList = function() {
  return this.setAutomationSessionsList([]);
};


/**
 * optional ExecutionContext execution_context = 9;
 * @return {?proto.browserstack.sdk.v1.ExecutionContext}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.getExecutionContext = function() {
  return /** @type{?proto.browserstack.sdk.v1.ExecutionContext} */ (
    jspb.Message.getWrapperField(this, proto.browserstack.sdk.v1.ExecutionContext, 9));
};


/**
 * @param {?proto.browserstack.sdk.v1.ExecutionContext|undefined} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest} returns this
*/
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.setExecutionContext = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.clearExecutionContext = function() {
  return this.setExecutionContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.hasExecutionContext = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bytes capabilities = 10;
 * @return {!(string|Uint8Array)}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.getCapabilities = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes capabilities = 10;
 * This is a type-conversion wrapper around `getCapabilities()`
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.getCapabilities_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCapabilities()));
};


/**
 * optional bytes capabilities = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCapabilities()`
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.getCapabilities_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCapabilities()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.setCapabilities = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.TestSessionEventRequest} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.clearCapabilities = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.TestSessionEventRequest.prototype.hasCapabilities = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.TestSessionEventResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.TestSessionEventResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.TestSessionEventResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.TestSessionEventResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.TestSessionEventResponse}
 */
proto.browserstack.sdk.v1.TestSessionEventResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.TestSessionEventResponse;
  return proto.browserstack.sdk.v1.TestSessionEventResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.TestSessionEventResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.TestSessionEventResponse}
 */
proto.browserstack.sdk.v1.TestSessionEventResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.TestSessionEventResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.TestSessionEventResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.TestSessionEventResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.TestSessionEventResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.TestSessionEventResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventResponse} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.TestSessionEventResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.TestSessionEventResponse} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventResponse.prototype.setError = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.TestSessionEventResponse} returns this
 */
proto.browserstack.sdk.v1.TestSessionEventResponse.prototype.clearError = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.TestSessionEventResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.browserstack.sdk.v1);
