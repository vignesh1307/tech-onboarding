// source: sdk-messages-ai.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.browserstack.sdk.v1.AIBrowserExtensionRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.AIBrowserExtensionResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.AISelfHealGetRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.AISelfHealGetResponse', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.AISelfHealStepRequest', null, global);
goog.exportSymbol('proto.browserstack.sdk.v1.AISelfHealStepResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.AIBrowserExtensionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.AIBrowserExtensionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.AIBrowserExtensionRequest.displayName = 'proto.browserstack.sdk.v1.AIBrowserExtensionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.AIBrowserExtensionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.AIBrowserExtensionResponse.displayName = 'proto.browserstack.sdk.v1.AIBrowserExtensionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.AISelfHealGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.AISelfHealGetRequest.displayName = 'proto.browserstack.sdk.v1.AISelfHealGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.AISelfHealGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.AISelfHealGetResponse.displayName = 'proto.browserstack.sdk.v1.AISelfHealGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.AISelfHealStepRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.AISelfHealStepRequest.displayName = 'proto.browserstack.sdk.v1.AISelfHealStepRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.browserstack.sdk.v1.AISelfHealStepResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.browserstack.sdk.v1.AISelfHealStepResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.browserstack.sdk.v1.AISelfHealStepResponse.displayName = 'proto.browserstack.sdk.v1.AISelfHealStepResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.AIBrowserExtensionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.AIBrowserExtensionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AIBrowserExtensionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    browserName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    browserVersion: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.AIBrowserExtensionRequest}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.AIBrowserExtensionRequest;
  return proto.browserstack.sdk.v1.AIBrowserExtensionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.AIBrowserExtensionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.AIBrowserExtensionRequest}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrowserName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrowserVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.AIBrowserExtensionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.AIBrowserExtensionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AIBrowserExtensionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBrowserName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBrowserVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AIBrowserExtensionRequest} returns this
 */
proto.browserstack.sdk.v1.AIBrowserExtensionRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string browser_name = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionRequest.prototype.getBrowserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AIBrowserExtensionRequest} returns this
 */
proto.browserstack.sdk.v1.AIBrowserExtensionRequest.prototype.setBrowserName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string browser_version = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionRequest.prototype.getBrowserVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AIBrowserExtensionRequest} returns this
 */
proto.browserstack.sdk.v1.AIBrowserExtensionRequest.prototype.setBrowserVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.AIBrowserExtensionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.AIBrowserExtensionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    extension: jspb.Message.getFieldWithDefault(msg, 2, ""),
    error: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.AIBrowserExtensionResponse}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.AIBrowserExtensionResponse;
  return proto.browserstack.sdk.v1.AIBrowserExtensionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.AIBrowserExtensionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.AIBrowserExtensionResponse}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtension$(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.AIBrowserExtensionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.AIBrowserExtensionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.AIBrowserExtensionResponse} returns this
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string extension = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.prototype.getExtension$ = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AIBrowserExtensionResponse} returns this
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.prototype.setExtension$ = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.AIBrowserExtensionResponse} returns this
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.prototype.clearExtension$ = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.prototype.hasExtension$ = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string error = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AIBrowserExtensionResponse} returns this
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.prototype.setError = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.AIBrowserExtensionResponse} returns this
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.prototype.clearError = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AIBrowserExtensionResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.AISelfHealGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.AISelfHealGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    platformIndex: jspb.Message.getFieldWithDefault(msg, 2, ""),
    frameworkSessionId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    locatorType: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetRequest}
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.AISelfHealGetRequest;
  return proto.browserstack.sdk.v1.AISelfHealGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.AISelfHealGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetRequest}
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkSessionId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocatorType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.AISelfHealGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.AISelfHealGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrameworkSessionId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocatorType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetRequest} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string platform_index = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.prototype.getPlatformIndex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetRequest} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.prototype.setPlatformIndex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetRequest} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.prototype.clearPlatformIndex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.prototype.hasPlatformIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string framework_session_id = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.prototype.getFrameworkSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetRequest} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.prototype.setFrameworkSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string locator_type = 4;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.prototype.getLocatorType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetRequest} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetRequest.prototype.setLocatorType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.AISelfHealGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.AISelfHealGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    frameworkSessionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    locatorType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    locatorValue: jspb.Message.getFieldWithDefault(msg, 4, ""),
    aiHealing: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    error: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetResponse}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.AISelfHealGetResponse;
  return proto.browserstack.sdk.v1.AISelfHealGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.AISelfHealGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetResponse}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkSessionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocatorType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocatorValue(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAiHealing(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.AISelfHealGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.AISelfHealGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getFrameworkSessionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetResponse} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string framework_session_id = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.getFrameworkSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetResponse} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.setFrameworkSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string locator_type = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.getLocatorType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetResponse} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.setLocatorType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetResponse} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.clearLocatorType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.hasLocatorType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string locator_value = 4;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.getLocatorValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetResponse} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.setLocatorValue = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetResponse} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.clearLocatorValue = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.hasLocatorValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool ai_healing = 5;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.getAiHealing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetResponse} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.setAiHealing = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetResponse} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.clearAiHealing = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.hasAiHealing = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string error = 6;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetResponse} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.setError = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.AISelfHealGetResponse} returns this
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.clearError = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AISelfHealGetResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.AISelfHealStepRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.AISelfHealStepRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    binSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    platformIndex: jspb.Message.getFieldWithDefault(msg, 2, ""),
    frameworkSessionId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isSuccess: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    locatorType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    locatorValue: jspb.Message.getFieldWithDefault(msg, 6, ""),
    testName: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepRequest}
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.AISelfHealStepRequest;
  return proto.browserstack.sdk.v1.AISelfHealStepRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.AISelfHealStepRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepRequest}
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinSessionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkSessionId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSuccess(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocatorType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocatorValue(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.AISelfHealStepRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.AISelfHealStepRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBinSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrameworkSessionId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsSuccess();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getLocatorType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLocatorValue();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTestName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string bin_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.getBinSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepRequest} returns this
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.setBinSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string platform_index = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.getPlatformIndex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepRequest} returns this
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.setPlatformIndex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepRequest} returns this
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.clearPlatformIndex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.hasPlatformIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string framework_session_id = 3;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.getFrameworkSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepRequest} returns this
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.setFrameworkSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool is_success = 4;
 * @return {boolean}
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.getIsSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepRequest} returns this
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.setIsSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string locator_type = 5;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.getLocatorType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepRequest} returns this
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.setLocatorType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string locator_value = 6;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.getLocatorValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepRequest} returns this
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.setLocatorValue = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string test_name = 7;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.getTestName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepRequest} returns this
 */
proto.browserstack.sdk.v1.AISelfHealStepRequest.prototype.setTestName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.browserstack.sdk.v1.AISelfHealStepResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.browserstack.sdk.v1.AISelfHealStepResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.browserstack.sdk.v1.AISelfHealStepResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AISelfHealStepResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    frameworkSessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    executeScript: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepResponse}
 */
proto.browserstack.sdk.v1.AISelfHealStepResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.browserstack.sdk.v1.AISelfHealStepResponse;
  return proto.browserstack.sdk.v1.AISelfHealStepResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.browserstack.sdk.v1.AISelfHealStepResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepResponse}
 */
proto.browserstack.sdk.v1.AISelfHealStepResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameworkSessionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecuteScript(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.browserstack.sdk.v1.AISelfHealStepResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.browserstack.sdk.v1.AISelfHealStepResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.browserstack.sdk.v1.AISelfHealStepResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.browserstack.sdk.v1.AISelfHealStepResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrameworkSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExecuteScript();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string framework_session_id = 1;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealStepResponse.prototype.getFrameworkSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepResponse} returns this
 */
proto.browserstack.sdk.v1.AISelfHealStepResponse.prototype.setFrameworkSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string execute_script = 2;
 * @return {string}
 */
proto.browserstack.sdk.v1.AISelfHealStepResponse.prototype.getExecuteScript = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.browserstack.sdk.v1.AISelfHealStepResponse} returns this
 */
proto.browserstack.sdk.v1.AISelfHealStepResponse.prototype.setExecuteScript = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.browserstack.sdk.v1);
